def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    def func2(arg3, arg4):
        var11 = func3(arg3, arg4)
        var17 = func4(var11, arg4)
        var18 = var17 - (arg3 + -1062074037) + arg2 | var11 ^ arg3
        var19 = -147 & arg1 & var18 | 97
        var20 = (arg2 & (var11 | 579973656 + arg2)) ^ arg1
        var21 = var17 | arg2 ^ (var18 - ((-1382098484 | 477) + (arg2 - arg1)))
        var22 = (var19 + var19) ^ var21
        result = (arg4 + 113831610) + 1642417194 & (var21 & var21 & -522 - arg1 & (var18 + (var17 - (var19 ^ arg2) + var21)))
        return result
    var23 = func2(arg2, arg1)
    var28 = func5(arg2, var23)
    def func6(arg29, arg30):
        result = 620 | arg2
        return result
    var31 = func6(arg2, arg1)
    if var23 < var28:
        var32 = var31 | arg1 ^ arg1 ^ var31
    else:
        var32 = (var28 - (-661 & -483835673)) & var31
    var33 = var23 & var31
    var34 = 540 ^ var23
    var35 = 1075634050 - ((-536 & arg2) | var31)
    var36 = 674 & var35 & arg2 | var33
    var37 = (var34 + 1999890280 & var34) ^ arg1
    var38 = var31 | arg1
    var39 = arg2 & var34
    if var31 < var31:
        var40 = var37 | var23 ^ (var33 | arg1)
    else:
        var40 = var31 ^ var23
    var41 = var34 & var28
    if var28 < var33:
        var42 = (var23 ^ var39) + -566 + var36
    else:
        var42 = var36 & var23
    var43 = var31 - var31
    var44 = (var43 & arg2) - var39
    var45 = var43 & var39
    var46 = arg1 & (var36 | var37)
    var47 = var44 & var37 - -288 | var31
    if arg1 < var33:
        var48 = var23 & 743542299
    else:
        var48 = arg1 & ((var31 + var37) | arg2)
    var49 = 970367165 & (var34 | -1442467567)
    var50 = (var28 & 570899923) ^ var44 - var49
    var51 = var37 - ((var47 & var44) - var36)
    var52 = var35 ^ arg2 ^ 1137366586
    var53 = (var46 - var52) & var50 - var28
    result = var38 | var34 | (-1517874578 | (var33 ^ var46 | var23))
    return result
def func5(arg24, arg25):
    var26 = 0
    for var27 in xrange(21):
        var26 += -9 | var27
    return var26
def func4(arg12, arg13):
    var14 = arg13 + ((arg13 | (-773 ^ (arg13 & -961))) - (arg13 | 738) | 1846596497 - arg13 ^ (arg12 + 75590865))
    var15 = (-594874892 + -1863584593) ^ (409033612 - (-793 + 1553152003 - arg13 - var14 + var14) | -274) | 23569698 | -48955433
    var16 = var15 - ((var15 ^ (260 - var15) | var14 | -169) ^ (((arg13 - arg12 + var14 ^ 451) ^ var14) | var15)) ^ (((var14 ^ var14) - var14 ^ var15) & arg12 - (var14 + (arg13 + (var15 & var15) ^ var15)))
    result = var16 & -757696933 + var16
    return result
def func3(arg5, arg6):
    var7 = 377174721 - arg5
    var8 = -410335229 ^ -1800413693
    var9 = ((var8 - var8 | arg5 - arg6 + ((var8 ^ (arg5 ^ (436 - var7) - 372)) - arg6)) & 600) | arg5
    var10 = 241366298 ^ (var8 ^ 338651021) ^ (var8 + var9 & var7)
    result = var7 ^ (((var9 ^ (((arg6 | (var7 ^ (var9 + 583061590))) | -13099739 + var9 - var8) ^ var7)) & arg5) - var9)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
